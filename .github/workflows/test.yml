name: test

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, labeled]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  FOUNDRY_PROFILE: 'ci'
  SEPOLIA_RPC_URL: 'https://sepolia.base.org'
  BASE_RPC_URL: 'https://mainnet.base.org'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: bun-${{ runner.os }}-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            bun-${{ runner.os }}-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run fmt
        run: bun run fmt

      - name: Run fmt check
        run: bun run fmt:check

  test:
    name: Foundry Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Cache Foundry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.foundry/cache
            ~/.foundry/rpc-cache
            cache/
            out/
          key: foundry-${{ runner.os }}-${{ hashFiles('foundry.toml') }}-${{ hashFiles('**/foundry.lock') }}

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: bun-${{ runner.os }}-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            bun-${{ runner.os }}-

      - name: Install JS deps
        run: |
          bun install --frozen-lockfile
          forge install

      - name: Run Forge build
        id: forge-build
        run: |
          forge build

      - name: Run Forge tests
        id: forge-test
        run: |
          mkdir -p artifacts/forge-test-results
          forge test -vvv 2>&1 | tee artifacts/forge-test-results/forge-test-results.txt
          exit ${PIPESTATUS[0]}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            artifacts/forge-test-results/forge-test-results.txt
            artifacts/forge-test-results/forge-build-sizes.txt

  gas:
    name: Gas Analysis
    runs-on: ubuntu-latest
    needs: test
    if: success() && needs.test.result == 'success'
    timeout-minutes: 30
    env:
      FOUNDRY_FUZZ_RUNS: 256
      FOUNDRY_FUZZ_MAX_TEST_REJECTS: 65536
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Cache Foundry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.foundry/cache
            ~/.foundry/rpc-cache
            cache/
            out/
          key: foundry-${{ runner.os }}-${{ hashFiles('foundry.toml') }}-${{ hashFiles('**/foundry.lock') }}

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: bun-${{ runner.os }}-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            bun-${{ runner.os }}-

      - name: Install JS deps
        run: |
          bun install --frozen-lockfile
          forge install

      - name: Generate gas report
        id: gas-report
        continue-on-error: true
        run: |
          mkdir -p snapshots
          forge test --gas-report > snapshots/current-gas-report.txt
          forge snapshot --snap snapshots/current-gas.snap

      - name: Compare gas snapshots
        if: always()
        run: |
          if [ ! -f "snapshots/current-gas.snap" ]; then
            echo "⚠️ No gas snapshot generated - skipping comparison"
            exit 0
          fi
          if [ -f ".gas-snapshot" ]; then
            echo "📊 Gas Comparison:"
            forge snapshot --diff .gas-snapshot snapshots/current-gas.snap || (
              echo "🔍 Gas changes detected!"
              exit 0
            )
          else
            echo "Creating first snapshot for future comparisons"
            cp snapshots/current-gas.snap .gas-snapshot
          fi

      - name: Upload gas reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gas-reports
          path: snapshots/
          if-no-files-found: warn

permissions:
  pull-requests: write
  contents: read